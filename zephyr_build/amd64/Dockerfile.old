FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=DontWarn
ARG WGET_ARGS="-q --show-progress --progress=bar:force:noscroll --no-check-certificate"



# RUN apt-get update && \
#     apt-get install -y curl \
#     wget \
#     locales \
#     tzdata \
#     udev \
#     usbutils
# RUN wget https://apt.kitware.com/kitware-archive.sh &&\
# bash kitware-archive.sh

# RUN apt install -y --no-install-recommends git cmake ninja-build gperf \
#     ccache dfu-util device-tree-compiler wget \
#     python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
#     make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1
RUN apt-get update > /dev/null \
    && apt-get upgrade --yes > /dev/null \
    && apt-get install --no-install-recommends --yes > /dev/null \
    ca-certificates \
    apt-utils \
    cmake \
    curl \
    gnupg2 \
    gpg \
    lsb-release \
    wget \
    git \
    sudo \
    vim \
    ssh \
    udev \
    usbutils

RUN apt-get install --no-install-recommends --yes > /dev/null \
    ninja-build gperf \
    ccache dfu-util \
    device-tree-compiler \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-tk \
    python3-wheel \
    xz-utils \
    file \
    make \
    gcc \
    gcc-multilib \
    g++-multilib \
    libsdl2-dev \
    libmagic1 \
    && rm -rf /var/lib/apt/lists/*


# install colcon
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" \
     | tee /etc/apt/sources.list.d/ros2.list > /dev/null \
    && apt update > /dev/null \
    && apt install --yes python3-colcon-common-extensions > /dev/null

# install openocd
RUN apt update > /dev/null \
    && apt install --yes \
    openocd \
    minicom > /dev/null


RUN pip install west

RUN west init --mr v3.2-branch /home/user/zephyrproject 

WORKDIR /home/user/zephyrproject
RUN west update

RUN west zephyr-export

RUN pip install -r /home/user/zephyrproject/zephyr/scripts/requirements.txt

WORKDIR /home/user
RUN wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/zephyr-sdk-0.15.2_linux-x86_64.tar.gz && \
wget -O - https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.2/sha256.sum | shasum --check --ignore-missing

RUN tar xvf zephyr-sdk-0.15.2_linux-x86_64.tar.gz

WORKDIR  /home/user/zephyr-sdk-0.15.2
    
# RUN ls -la && chmod +x setup.sh && bash setup.sh

RUN printf "y\ny\n" | ./setup.sh

WORKDIR /home/user/zephyrproject/zephyr

RUN west build -p always -b teensy41 samples/basic/blinky

RUN curl -L http://www.pjrc.com/teensy/00-teensy.rules -o 00-teensy.rules

RUN apt-get update && \
    apt-get install -y git \
    mingw-w64 \
    gcc \
    libusb-dev

WORKDIR /home/user/

RUN git clone https://github.com/PaulStoffregen/teensy_loader_cli.git

WORKDIR /home/user/teensy_loader_cli

RUN make

ENV PATH="/home/user/teensy_loader_cli:${PATH}"

WORKDIR /home/user/zephyrproject/zephyr




